# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

#Reuseable commands in jobs
commands:
  destroy_environment:
    steps:
      - run:
          name: destroy environment
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
          when: on_fail

# Define a job to be invoked later in a workflow.
jobs:
  create-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloud Formation Stack
          command: |
            aws cloudformation create-stack \
              --template-body file://template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-west-2
      - destroy_environment
  configure-infrastructure:
    docker:
      - image: python:3.8-alpine
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["68:35:bc:a1:f2:f6:4b:3d:6e:d3:62:4d:78:f1:c7:52"]
      - run:
          name: install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml
  create-and-deploy-frontend:
    docker:
      - image: amazon/aws-cli
    steps:
      - name: Execute Bucket Creation - CloudFormation and deploy to frontend 
        command: |
           aws cloudformation create-stack \
              --template-body file://bucket.yml \
              --parameters file://bucketparams.json \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-west-2
      # - destroy_environment
  smoke-test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run: 
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL}
            then
              return 0
            else
              return 1
            fi

# Invoke jobs via workflows
workflows:
  create-infrastructure-workflow:
    jobs:
      - create-infrastructure
      # - configure-infrastructure
      - create-and-deploy-frontend
      - smoke-test